---
name: Release
on:
  push:
    branches: [main]
permissions:
  contents: write
  id-token: write
concurrency:
  group: release
  cancel-in-progress: false
jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
      - name: Setup Git identity (for version bump commit)
        run: |
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor }}@users.noreply.github.com"
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
          registry-url: 'https://registry.npmjs.org'
          scope: '@chryb'
          cache: 'npm'
      - name: Install dependencies
        run: npm ci
      - name: Typecheck & test
        run: |
          npm run typecheck
          npm test --silent
      - name: Build
        run: npm run build
      # Choose your bump strategy. Here we auto-bump PATCH on every push to main.
      # You can change "patch" to "minor" or "major", or wire in logic later.
      - name: Bump version (patch), commit & tag
        run: npx bumpp minor -y --commit --tag --push
      - name: Skip publish if this version already exists on npm
        id: check
        run: |
          NAME=$(node -p "require('./package.json').name")
          VERSION=$(node -p "require('./package.json').version")
          echo "name=$NAME" >> "$GITHUB_OUTPUT"
          echo "version=$VERSION" >> "$GITHUB_OUTPUT"
          if npm view "$NAME" versions --json | grep -q "\"$VERSION\""; then
            echo "exists=true" >> "$GITHUB_OUTPUT"
          else
            echo "exists=false" >> "$GITHUB_OUTPUT"
          fi
      - name: Publish to npm
        if: steps.check.outputs.exists == 'false'
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_API_TOKEN }}
        run: |
          # --provenance needs id-token: write
          npm publish --access public --provenance
      - name: Create GitHub release (from the tag)
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ steps.check.outputs.version }}
          name: v${{ steps.check.outputs.version }}
          generate_release_notes: true
        if: always() # still attaches notes even if publish skipped because version existed
